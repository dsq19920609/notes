#### 每个指令都必须由分号结束
# 全局模块
#user  nobody; # 配置用户或者组
worker_processes  1; # 运行生产的进程数量 默认1

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info; # 指定日志的路径，日志级别，可以放置在全局块，http块，server块，日志级别：debug|info|notice|warn|error|crit|alert|emerg

#pid        logs/nginx.pid;  # nginx进程运行文件的存放位置


events {       # events模块
    accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on
    multi_accept on;  #设置一个进程是否同时接受多个网络连接，默认为off
    #use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
    worker_connections  1024;    #最大连接数，默认为512
}


http {   # http模块
    # http全局模块
    include       mime.types;   #文件扩展名与文件类型映射表
    default_type  application/octet-stream;  #默认文件类型，默认为text/plain

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';   #自定义日志格式

    #access_log  logs/access.log  main;   #combined为日志格式的默认值

    sendfile        on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    #tcp_nopush     on;
	
	# sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
    # keepalive_timeout 65;  #连接超时时间，默认为75s，可以在http，server，location块。

    #gzip  on;  # 压缩
	  
	# upstream mysvr {   
    #   server 127.0.0.1:7878;
    #   server 192.168.10.121:3333 backup;  #热备
    # }
    # error_page 404 https://www.baidu.com; #错误页

    server {  # server模块
        listen       80;  #  监听端口
        server_name  localhost;  #监听地址 

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
		
		location / {
            root   html;
			try_files $uri /index.html; 
        }
		
		# location  ~*^.+$ {       #请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。
        #   root path;  #根目录
        #   index vv.txt;  #设置默认页
        #   proxy_pass  http://mysvr;  #请求转向mysvr 定义的服务器列表
        #   deny 127.0.0.1;  #拒绝的ip
        #   allow 172.18.5.54; #允许的ip           
        # } 

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
